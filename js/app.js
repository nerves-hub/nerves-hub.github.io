(()=>{"use strict";new class{constructor(t={}){this.initClass=t.initClass||"josh-js",this.initDom=document.querySelectorAll("."+this.initClass),this.animClass=t.animClass||"animate__animated",this.offset=t.offset||.2,this.animateInMobile=void 0===t.animateInMobile||t.animateInMobile,this.onDOMChange=void 0!==t.onDOMChange&&t.onDOMChange,this.intersectOnScroll(this.initDom),this.callOnDOMChange(),this.addCss(this.initDom)}intersectionObserverCallback(t,i){const s=!this.animateInMobile&&this.isMobile();t.forEach((t=>{const e=t.target,n=e.dataset.joshAnimName,o=e.dataset.joshIteration,a=e.dataset.joshDuration,r=e.dataset.joshAnimDelay;if(t.isIntersecting){let t=`\n          visibility: visible;\n          animation-name: ${n};\n          animation-duration: ${a};\n          animation-iteration-count: ${o};\n          animation-delay: ${r};\n        `;s||(e.style=e.style.cssText+t),i.unobserve(e)}}))}addCss(t){t.length>0?t.forEach((t=>{this.cssUtil(t)})):this.cssUtil(t)}cssUtil(t){const i=!this.animateInMobile&&this.isMobile();t.classList.add(this.animClass),i||(t.style=t.style.cssText+"visibility: hidden")}intersectOnScroll(t){if(!("IntersectionObserver"in window))throw new Error("IntersectionObserver is not support by this browser. Try by adding pollyfil or use other library.");{const i=new IntersectionObserver(this.intersectionObserverCallback.bind(this),{root:null,rootMargin:"0px",threshold:this.offset});t.length>0?t.forEach((t=>{i.observe(t)})):i.observe(t)}}callOnDOMChange(){window.addEventListener("DOMContentLoaded",(()=>{if(this.onDOMChange){const t={childList:!0,subtree:!0};new MutationObserver((t=>{t.forEach((t=>{const i=t.addedNodes;null!==i&&i.forEach((t=>{this.addCss(t),this.intersectOnScroll(t)}))}))})).observe(document.body,t)}}))}isMobile(){return/Android|webOS|iPhone|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)}}})();